{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport const OvenScroller = () => {\n  _s();\n  const [ovenScrollerBlock, setOvenScrollerBlock] = useState(false);\n  const scrollCounter = () => {\n    if (window.scrollY >= 1000) {\n      setOvenScrollerBlock(true);\n    } else if (window.scrollY <= 1000) {\n      setOvenScrollerBlock(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', scrollCounter);\n  }, []);\n  return ovenScrollerBlock;\n};\n_s(OvenScroller, \"4nM7z9z8VfDt5S4Z1OOq4dN6Tbs=\");\n_c = OvenScroller;\nvar _c;\n$RefreshReg$(_c, \"OvenScroller\");","map":{"version":3,"names":["useEffect","useState","OvenScroller","_s","ovenScrollerBlock","setOvenScrollerBlock","scrollCounter","window","scrollY","addEventListener","_c","$RefreshReg$"],"sources":["C:/Users/Pavilion/Desktop/Sacskevicz/Frontend/Projects_2023/pizzeria/src/components/scrollers/OvenScroller.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const OvenScroller = () => {\n  const [ovenScrollerBlock, setOvenScrollerBlock] = useState(false);\n\n  const scrollCounter = () => {\n    if (window.scrollY >= 1000) {\n      setOvenScrollerBlock(true);\n    } else if\n        (window.scrollY <= 1000)\n        {\n        setOvenScrollerBlock(false);  \n        }\n    \n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollCounter);\n  }, []);\n\n  return ovenScrollerBlock;\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIC,MAAM,CAACC,OAAO,IAAI,IAAI,EAAE;MAC1BH,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,MAAM,IACFE,MAAM,CAACC,OAAO,IAAI,IAAI,EACvB;MACAH,oBAAoB,CAAC,KAAK,CAAC;IAC3B;EAEN,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdO,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,aAAa,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,iBAAiB;AAC1B,CAAC;AAACD,EAAA,CAnBWD,YAAY;AAAAQ,EAAA,GAAZR,YAAY;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}