{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport const Scroller = () => {\n  _s();\n  const [scrollerBlock, setScrollerBlock] = useState(false);\n  const scrollCounter = () => {\n    if (window.scrollY >= 300) {\n      setScrollerBlock(true);\n    } else {\n      window.scrollY >= 300;\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', scrollCounter);\n    return () => {\n      window.removeEventListener('scroll', scrollCounter);\n    };\n  }, []);\n  return scrollerBlock;\n};\n_s(Scroller, \"unn8ht7mQQEwEm1PVeXhaETJWJU=\");\n_c = Scroller;\nvar _c;\n$RefreshReg$(_c, \"Scroller\");","map":{"version":3,"names":["useEffect","useState","Scroller","_s","scrollerBlock","setScrollerBlock","scrollCounter","window","scrollY","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["C:/Users/Pavilion/Desktop/Sacskevicz/Frontend/Projects_2023/pizzeria/src/components/Scroller.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const Scroller = () => {\n  const [scrollerBlock, setScrollerBlock] = useState(false);\n\n  const scrollCounter = () => {\n    if (window.scrollY >= 300) {\n      setScrollerBlock(true);\n    } else{\n        (window.scrollY >= 300)\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollCounter);\n    return () => {\n      window.removeEventListener('scroll', scrollCounter);\n    };\n  }, []);\n\n  return scrollerBlock;\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIC,MAAM,CAACC,OAAO,IAAI,GAAG,EAAE;MACzBH,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAK;MACDE,MAAM,CAACC,OAAO,IAAI,GAAG;IAC1B;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdO,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,aAAa,CAAC;IAChD,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,aAAa,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,aAAa;AACtB,CAAC;AAACD,EAAA,CAnBWD,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}